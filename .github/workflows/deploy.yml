# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Deploy

on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
      version:
        description: 'version'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
          - prerelease

jobs:
  test:
    uses: ./.github/workflows/test.yml


  publish-pypi:
    needs: [test]
    permissions:
      contents: write

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Poetry Install
      run: |
        pipx install poetry

    - name: Install dependencies
      # 设置POETRY_PYPI_TOKEN_PYPI 环境变量
      run: |
        poetry install
    
    - name: 如果是release触发，那么就用tag名
      if: github.event_name == 'release'
      run: |
        # echo "poetry version ${{ github.event.release.tag_name }}"
        poetry version ${{ github.event.release.tag_name }}

    - name: 如果是workflow触发，那么就用inputs.version
      # 设置POETRY_PYPI_TOKEN_PYPI 环境变量
      if: github.event_name == 'workflow_dispatch'
      run: |
        # echo "poetry version ${{ inputs.version }}"
        poetry version ${{ inputs.version }}

    - name: Poetry publish
      # 设置POETRY_PYPI_TOKEN_PYPI 环境变量
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        poetry build
        poetry publish
  
  build:
    runs-on: windows-latest
    needs: [test]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
    - name: Poetry Install
      run: |
        pipx install poetry

    - name: Install dependencies
      # 设置POETRY_PYPI_TOKEN_PYPI 环境变量
      run: |
        poetry install
    - name: Build
      run: |
        poetry shell
        .\build.bat

    - name: Upload to Release Action
      # You may pin to the exact commit or the version.
      # uses: Shopify/upload-to-release@c77c9b3e5d288adaef98a7007bf92340ec6ce03b
      uses: Shopify/upload-to-release@v2.0.0
      with:
        # Artifact name
        name: ee.exe
        # Path to the file to upload
        path: dist\ee.exe
        # secrets.GITHUB_TOKEN
        repo-token: ${{secrets.GITHUB_TOKEN}}
          
      
