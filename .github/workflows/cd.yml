# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish Python Package

on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
      version:
        description: 'version'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
          - prerelease

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Poetry Install
      # You may pin to the exact commit or the version.
      # uses: knowsuchagency/poetry-install@7ed80d49910319d3e14ac262a5c81f681de48de0
      run: |
        pipx install poetry

    - name: Install dependencies
      # 设置POETRY_PYPI_TOKEN_PYPI 环境变量
      run: |
        poetry install
    
    - name: 如果是release触发，那么就用tag名
      if: github.event_name == 'release'
      run: |
        echo "poetry version ${{github.ref}}"
        # poetry version ${{ github.ref }}

    - name: 如果是workflow触发，那么就用inputs.version
      # 设置POETRY_PYPI_TOKEN_PYPI 环境变量
      if: github.event == 'workflow_dispatch'
      run: |
        echo "poetry version ${{ inputs.version }}"
        # poetry version ${{ inputs.version }}

    - name: Poetry publish
      # 设置POETRY_PYPI_TOKEN_PYPI 环境变量
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        echo "poetry publish --build"
        # poetry publish --build

